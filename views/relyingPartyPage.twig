<!DOCTYPE html>

<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>IndieCert</title>
  <link rel="stylesheet" type="text/css" href="css/style.css">
</head>
<body>
    <div id="container">
    <a class="header" href="welcome"><h1>IndieCert</h1></a>

    <h2>Relying Party</h2>
    <p>
Here you can read how to integrate your service as a <em>relying party</em>
with IndieCert.
    </p>

    <h3>Authentication Request</h3>
    <p>
The relying party redirects the browser to <code>{{ authUri|e }}</code> to
initiate the authentication process. Two query parameters MUST be specified:
    </p>

<dl>
    <dt><code>me</code></dt>
    <dd>
the URL to the user's home page, or host name, e.g.: <code>example.org</code>
or <code>https://www.example.org/user</code>.
    </dd>
    <dt><code>redirect_uri</code></dt>
    <dd>
the callback URL belonging to the relying party where the browser will be
redirected back to after successful authentication and after user approval. It
MUST be an absolute HTTPS URL, e.g.: <code>https://example.org/callback</code>;
    </dd>
</dl>

    <p>
If the <code>me</code> field is not a valid HTTPS URI it will be modified by
adding <code>https://</code> and optionally a trailing <code>/</code>. For
example: <code>example.org</code> will be modified to
<code>https://example.org/</code>. After (optional) modification of
<code>me</code>, both <code>me</code> and <code>redirect_uri</code> MUST point
to HTTPS resources.
    </p>
    
    <h4>Example</h4>
    <p>
The redirect to the authentication server can be accomplished in a number of
ways, e.g.: using a redirect:
    </p>

<blockquote>
<pre>HTTP/1.1 302 Found
Location: {{ authUri|e }}?redirect_uri=https://example.org/callback&amp;me=https://www.example.org/user
</pre>
</blockquote>

    <p>
or using a <code>&lt;form&gt;</code>:
    </p>
<blockquote>
<pre>
&lt;form method="get" action="{{ authUri|e }}"&gt;
    &lt;input type="hidden" name="redirect_uri" value="https://example.org/callback"&gt;
    &lt;input type="text" name="me" id="me" placeholder="yourdomain.com"&gt;
    &lt;input type="submit" value="Sign In"&gt;
&lt;/form&gt;
</pre>
</blockquote>

    <h3>Authentication Response</h3>
    <p>
IndieCert will redirect the browser back to the <code>redirect_uri</code>
specified in the authentication request after the user is authenticated at
IndieCert and approved the authentication.
    </p>

    <h4>Example</h4>

<blockquote>
<pre>
HTTP/1.1 302 Found
Location: https://example.org/callback?code=wW3OLXJZn35d7zFwg9YGmWti
</pre>
</blockquote>
 
    <h3>Verification Request</h3>
    <p>
The <code>code</code> parameter can now be used to request the claimed user
identity. The <code>code</code> is valid for 10 minutes and can be used
only once. The following parameters MUST be specified:
    </p>

<dl>
    <dt><code>code</code></dt>
    <dd>the code obtained in the authentication response query parameter <code>code</code>;</dd>
    <dt><code>redirect_uri</code></dt>
    <dd>
the URL the browser was redirected back to after the successful authentication,
e.g.: <code>https://example.org/callback</code>.
    </dd>
</dl>
<p>
Now a HTTP <code>POST</code> can be used to obtain the user's home page URL:
    </p>
<blockquote>
<pre>
POST {{ verifyPath|e}} HTTP/1.1
Host: {{ hostName|e }}
Accept: application/json
Content-Type: application/x-www-form-urlencoded

redirect_uri=https%3A%2F%2Fexample.org%2Fcallback&amp;code=wW3OLXJZn35d7zFwg9YGmWti
</pre>
</blockquote>

    <p>
The response will be returned as JSON, with the <code>me</code> field
indicating the user's homepage.
    </p>

This is the identity that MUST be used by the relying party to identify the
user as it could differ from the initial <code>me</code> specified by the user,
e.g.: <code>https://</code> was added or redirects were followed to reach the
user's home page.
    </p>

<blockquote>
<pre>
HTTP/1.1 200 OK
Content-Type: application/json;charset=utf-8
Cache-Control: no-store
Pragma: no-cache

{
    "me": "https://www.example.org/user/"
}
</pre>
</blockquote>

    <p>
In case there was a failure in verifying the code, e.g. it was already used, or
not valid the following response can be expected:
    </p>

<blockquote>
<pre>
HTTP/1.1 400 Bad Request
Content-Type: application/json;charset=utf-8
Cache-Control: no-store
Pragma: no-cache

{
    "error":"invalid_request"
}
</pre>
</blockquote>

    <p>
It is also possible to receive the response in
<code>application/x-www-form-urlencoded</code> format by using the
<code>Accept: application/x-www-form-urlencoded</code> header instead of the
<code>Accept: application/json</code> header. For now the default is
<code>application/x-www-form-urlencoded</code>, but you MUST specify it.
    </p>

    <h3>Security Considerations</h3>
    <h4>CSRF</h4>
    <p>
In order to prevent cross site request forgery (CSRF) the relying party MUST
implement a way to prevent this from happening.
    </p>

    <p>
The attack we try to avoid is the attack where user X tricks user Y to
authenticate to a relying party using user X's identity and possibly
unintentionally leak private date to user X's account.
    </p>

    <p>
There are two ways to prevent CSRF.
    </p>

<h5>Checking HTTP "Referer"</h5>
    <p>
The relying party can compare the <a href="https://en.wikipedia.org/wiki/HTTP_referer">HTTP "Referer"</a> request header on the callback with the authentication URL.
    </p>
    <p>
The HTTP "Referer" header MUST begin with <code>{{ authUri|e }}</code>. If the referrer is missing
from the HTTP request or does not match the authentication URI the callback
MUST fail.
    </p>

<h5>Keeping State</h5>
    <p>
In case the relying party keeps state, the <code>state</code> parameter can
be used in the authentication request. The same state value MUST exist on
callback.
    </p>

    <div class="footer">
        <a href="faq">FAQ</a> | IndieCert
    </div>
    </div>
</body>
</html>
