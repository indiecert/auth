<!DOCTYPE html>

<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>IndieCert</title>
  <link rel="stylesheet" type="text/css" href="css/style.css">
</head>
<body>
    <div id="container">
    <a class="header" href="welcome"><h1>IndieCert</h1></a>

    <h2>Frequently Asked Questions</h2>

    <h3>Why IndieCert?</h3>
    <p>
I got interested in decentralized authentication systems after working on SAML,
OpenID, OAuth and ran into <a href="http://webid.info/">WebID</a> and
<a href="https://indieauth.com">IndieAuth</a>. So I though, I can do something
similar, but then with client certificates instead of "social" login using
Twitter and GitHub.
    </p>

    <h3>Why client certificates?</h3>
    <p>
They always fascinated me. This secure technology is available in almost every
browser, but no one uses it! Of course, this is due to the difficulty in
deploying it and browser support for actually generating these beautiful
client certificates... So it is not perfect, but at least on some browsers and
mobile devices it works really well.
    </p>

    <h3>Fingerprints?</h3>
    <p>
You need to store a <code>&lt;link rel="me" href="fingerprint"&gt;</code> on
your homepage that matches the fingerprint that was installed in your browser.
You can add multiple fingerprints to your home page for multiple browsers and/or
devices. IndieCert will help you by showing the fingerprint to put on your
home page if it is not (yet) there when you try to authenticate.
    </p>

    <h3>How can I become a relying party?</h3>
    <p>
See the instructions <a href="rp">here</a>.
    </p>

    <h3>How secure is this? What if the IndieCert server gets compromised?</h3>
    <p>
The worst case scenario is that anyone can claim any identity, so you can take
over someone's account. The idea is for this service to be distributed, running
on different implementations, so the impact of a compromise will be reduced.
Recovery from compromise will require a regeneration of the CA and require all
users to enroll again to the service to generate a new client certificate.
    </p>

    <h3>Can I specify an URL instead of a domain?</h3>
    <p>
You can do both. The IndieCert service will follow your URL or domain by
performing a HTTPS request, follow the redirects and determine the 'effective'
URL to extract the fingerprints. If you specify <code>example.org</code>
IndieCert will try to fetch <code>https://example.org/</code> and possibly
follow any redirects. You can also specify a full URL, e.g.:
<code>https://www.example.org/johndoe/</code>.
    </p>

    <h3>Do I need a HTTPS home page?</h3>
    <p>
Yes. In order to be sure that your client certificate and your identity
expressed by the URL you claim are bound you need to make the URL available
over HTTPS. It can <strong>NOT</strong> be a self signed certificate. It must
be signed by a "trusted" CA. You can use
<a href="https://startssl.com/">StartSSL</a> to obtain a free certificate or
wait for <a href="https://letsencrypt.org/">Letâ€™s Encrypt</a>.
    </p>

    <h3>Supported Browsers</h3>
    <p>
So far, it seems that Firefox and Chrom(e)(ium) work really well, both on the
desktop and on Android. There is a small issue with Firefox where you need to
restart the browser after installing the certificate to be able to authenticate
to the web server with it. I am not sure why this is, and it does not occur
in Chrom(e)(ium). About Safari, I am not sure. I do not have a Mac so it is a
bit hard to test. It seems Safari supports the <code>&lt;keygen&gt;</code> tag to
generate a private key, but it always seems to want to download the certificate
instead of installing it in Keychain.
    </p>

    <h3>What about Internet Explorer?</h3>
    <p>
Well... it is possible to get it to work somehow with an ActiveX control or
so I've read somewhere. So far I haven't investigated it any further... Of
course it is possible to generate a certificate in Firefox, export it to
PKCS#12 format and import it the Windows certificate manager.
    </p>

    <h3>And my iDevice?</h3>
    <p>
Well. It seems the easiest is to generate a certificate using Firefox and
exporting it to PKCS#12 and then import it on your iDevice. As
far as I know Safari on iOS does not support <code>&lt;keygen&gt;</code> at
all, but I don't have an iDevice to test with, so it remains speculation.
    </p>

    <h3>Can I run my own instance?</h3>
Yes! This is one of the design principles that it is easy to run your own
instance of IndieCert. You can find the code and installation instructions in
the GitHub <a href="https://github.com/fkooman/indiecert">repository</a>. RPMs
are available for CentOS/Red Hat Enterprise Linux and Fedora. You can also run
a Docker
<a href="https://github.com/fkooman/indiecert/tree/master/docker">instance</a>,
ideal for testing while developing your relying party!
    </p>

    <h3>Where can I get more information?</h3>
    <p>
You can read this <a href="https://www.tuxed.net/fkooman/blog/indiecert.html">blog</a> entry.
    </p>

    <h3>How can I help or get help?</h3>
    <p>
Test it out on as many browsers and devices possible and create issues on
<a href="https://github.com/fkooman/indiecert/issues">GitHub</a>, and if you
can patches to get Safari to work better, IE at all and come up with solutions
for iDevices :-)
    </p>
    <p>
If you have any questions, please post them as a GitHub issue as well, or
contact me directly. Look <a href="https://www.tuxed.net/fkooman/">here</a> to
find ways of contacting me.
    </p>

    <div class="footer">
        <a href="faq">FAQ</a> | IndieCert
    </div>
    </div>
</body>
</html>
