<!DOCTYPE html>

<html lang="en">
{% include 'head.html' %}
<body>
    <div id="container">
        <a class="header" href="."><h1>IndieCert</h1></a>

        <h2>Frequently Asked Questions</h2>

        <h3>Why IndieCert?</h3>
        <p>
            I got interested in decentralized authentication systems after working on SAML,
            OpenID, OAuth and ran into <a href="http://webid.info/">WebID</a> and
            <a href="https://indieauth.com">IndieAuth</a>. So I thought about doing something
            comparable to IndieAuth, but with client certificates instead of "social" login using
            Twitter and GitHub.
        </p>

        <h3>Why client certificates?</h3>
        <p>
            They always fascinated me. This secure technology is available in almost every
            browser, but no one uses it! Of course, this is due to the difficulty in
            deploying it and browser support for actually generating client
            certificates... So it is not perfect, but at least on some browsers and mobile
            devices it works really well.
        </p>

        <h3>Supported Browsers</h3>
        <p>
            So far, it seems that Firefox and Chrom(e)(ium) work really well, both on the
            desktop and on Android.
        </p>
        <p>
            Safari was tested at some point, but not consistently. It seems Safari supports
            the <code>&lt;keygen&gt;</code> tag to generate a private key, but it always
            seems to want to download the certificate instead of installing it in Keychain.
            It seems possible to then manually install the certificate though.
        </p>
        <p>
            Regarding Internet Explorer... it is possible to get it to work somehow with an ActiveX control or
            so I've read somewhere. So far I haven't investigated it any further... Of
            course it is possible to generate a certificate in Firefox, export it to
            PKCS#12 format and import it the Windows certificate manager. What is even more smooth is
            enrolling with Google Chrome and after that use Internet Explorer,
            Google Chrome will actually install the certificate in the Windows certificate store.
        </p>
        <p>
            On iOS it seems the easiest is to generate a certificate using Firefox and
            exporting it to PKCS#12 and then import it on your iDevice. As
            far as I know Safari on iOS does not support <code>&lt;keygen&gt;</code> at
            all, but I don't have an iDevice to test with, so it remains speculation.
        </p>

        <h3>Can I specify a URL instead of a domain?</h3>
        <p>
            You can do both. The IndieCert service will follow your URL or domain by
            performing a HTTPS request, follow the redirects and determine the 'effective'
            URL to extract the fingerprints. If you specify <code>example.org</code>
            IndieCert will try to fetch <code>https://example.org/</code> and
            follow any redirects. You can also specify a full URL, e.g.:
            <code>https://www.example.org/johndoe/</code>.
        </p>

        <h3>Do I need a HTTPS home page?</h3>
        <p>
            Yes. In order to be sure that your client certificate and your identity
            expressed by the URL you claim are bound you need to make the URL available
            over HTTPS. It can <strong>NOT</strong> be a self signed certificate. It must
            be signed by a "trusted" CA. You can use
            <a href="https://startssl.com/">StartSSL</a> to obtain a free certificate or
            wait for <a href="https://letsencrypt.org/">Letâ€™s Encrypt</a>. For now also
            the <a href="http://www.cacert.org">CAcert</a> CA is supported.
        </p>

        <h3 id="supportedServices">Supported Services</h3>
        <p>
            A list of services and sites that support IndieCert is maintained at the
            <a href="https://indiewebcamp.com/distributed-indieauth#Sites_that_support_distributed_IndieAuth">IndieWebCamp wiki</a>.
        </p>
        <p>
            An experimental service not yet mentioned there is <a href="https://phubble.tuxed.net/">Phubble</a>. A group messaging service.
        </p>

        <h3>Fingerprints</h3>
        <p>
            You need to put the fingerprint of the certificate that was installed in your
            browser on your home page. You can add multiple fingerprints to your home page
            for multiple browsers and/or devices. IndieCert will help you by showing the
            fingerprint to put on your home page if it is not (yet) there when you try to
            login.
        </p>
        <p>
            The fingerprint of the certificate is generated by calculating the SHA-256 hash
            over the DER encoded certificate and base64url encoding the resulting binary
            string according to <a href="https://tools.ietf.org/html/rfc6920">RFC 6920</a>
            "Naming Things with Hashes" and
            <a href="https://tools.ietf.org/html/rfc4648#section-5">RFC 4648</a>
            "The Base16, Base32, and Base64 Data Encodings". For example:
        </p>

<pre>
&lt;link rel="publickey" href="ni:///sha-256;ThIaJ7TJQ1oAIKCGKe0BdBO3Bh8NzxZeyAa-WCTuzpU?ct=application/x-x509-user-cert"&gt;
</pre>
        <p>
            If you want to generate your own fingerprint from a certificate, you can use OpenSSL
            for this:
        </p>

<pre>
$ openssl x509 -in client.crt -outform DER \
    | openssl dgst -binary -sha256 \
    | openssl base64 \
    | tr +/ -_ \
    | tr -d =
</pre>

        <h3>Can I become a relying party?</h3>
        <p>
            Yes! See the relying party instructions <a href="rp">here</a>.
        </p>

        <h3>How secure is this?</h3>
        <p>
            What happens in case the IndieCert instance you are using is
            compromised.
        </p>
        <h4>"Distributed IndieAuth"</h4>
        <p>
            In case you are using this instance as "Distributed IndieAuth"
            endpoint, by specifying this instance in
            <code>authorization_endpoint</code> on your home page, all relying
            parties that use "Distributed IndieAuth" will be vulnerable to
            impersonation of your account by an attacker.
        </p>

        <h4>As Default Server</h4>
        <p>
            If a relying party uses this instance as the default, without
            supporting "Distributed IndieAuth", all accounts are vulnerable at
            the relying party.
        </p>

        <h4>Certificates</h4>
        <p>
            The client certificate's private key installed in the user's
            browser cannot be compromised by a compromised IndieCert instance,
            so it can still be used later on when the service recovers or the
            user decides to trust another instance.
        </p>

        <h3>Can I run my own instance?</h3>
        <p>
            Yes! This is one of the design principles that it is easy to run your own
            instance of IndieCert. You can find the code and installation instructions in
            the GitHub <a href="https://github.com/fkooman/indiecert">repository</a>. RPMs
            are <a href="https://copr.fedoraproject.org/coprs/fkooman/indiecert/">available</a>
            for CentOS/Red Hat Enterprise Linux and Fedora. You can also run
            a Docker
            <a href="https://github.com/fkooman/indiecert/tree/master/docker">instance</a>,
            ideal for testing while developing your relying party!
        </p>

        <h3 id="GitHub">Using GitHub Pages instead of your own domain</h3>
        <p>
Not everyone will have their own domain and valid TLS certificate configured
for it. So for <strong>testing only</strong> it makes sense to use GitHub pages!
        </p>

        <p>
If you already have a GitHub account you are good to go. Go to GitHub and
create a new repository. If your GitHub account name is for example
<code>fkooman</code>, create a repository called
<code>fkooman.github.io</code>. In this repository add a file
<code>index.html</code> and put the following content there:
        </p>

<pre>
&lt;!DOCTYPE html&gt;

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="utf-8"&gt;
  &lt;link rel="publickey" href="<strong>{fingerprint}</strong>"/&gt;
  &lt;link rel="authorization_endpoint" href="https://indiecert.net/auth"/&gt;
  &lt;link rel="token_endpoint" href="https://indiecert.net/token"/&gt;
&lt;/head&gt;
&lt;body&gt;
  My GitHub Page
&lt;/body&gt;
&lt;/html&gt;
</pre>

        <p>
Now try to login to IndieCert using the identity
<code>https://fkooman.github.io/</code>. Where you replace <code>fkooman</code>
with your own GitHub account name. The authentication will fail because the
fingerprint does not yet match. Replace <code>{fingerprint}</code> with the
fingerprint mentioned when you try to login. After saving this, the
authentication should work! You can use the identity mentioned above to
authenticate to Distributed IndieAuth applications!
        </p>

        <h3>Is IndieCert the end game?</h3>
        <p>
            No. It is an intermediate step towards better browser authentication. See for
            example <a href="http://browserauth.net/">http://browserauth.net/</a> for more
            discussion on the topic. IndieCert (partly) solves some of the issues presented
            there.
        </p>

        <h3>How can I help or get help?</h3>
        <p>
            Test it out on as many browsers and devices possible and create issues on
            <a href="https://github.com/fkooman/indiecert/issues">GitHub</a>, and if you
            can patches to get Safari to work better, IE at all and come up with solutions
            for iDevices :-)
        </p>
        <p>
            If you have any questions, please post them as a GitHub issue as well, or
            contact me directly. Look <a href="https://www.tuxed.net/fkooman/">here</a> to
            find ways of contacting me.
        </p>

        {% include 'footer.html' %}
    </div> <!-- /container -->
</body>
</html>
